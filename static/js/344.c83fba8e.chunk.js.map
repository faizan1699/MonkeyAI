{"version":3,"file":"static/js/344.c83fba8e.chunk.js","mappings":"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","sources":["Services/Services.js","pages/Components/PaginationComponent/Pagination.jsx","pages/Components/employelocation/EmployeLocation.jsx","pages/Components/resourcestitles/ResourcesTitle.jsx","pages/Dashboard/DashboardTopCards/LastMonthDetail.jsx","pages/Dashboard/DepartMents/DepartmentData.jsx","pages/Dashboard/DepartMents/DepartMents.jsx","pages/Dashboard/DevelopersList/DeveloperList.jsx","pages/Dashboard/Projects/ProjectDataRender.jsx","pages/Dashboard/Projects/Projects.jsx","pages/Dashboard/ResourcesTitles/ResourcesTitles.jsx","pages/Dashboard/Dashboard.jsx"],"sourcesContent":["\r\nimport coke from '../Common/CompaniesLogo/Coke.png';\r\nimport bmw from '../Common/CompaniesLogo/BMW.png';\r\nimport huawei from '../Common/CompaniesLogo/Huawei.png';\r\nimport telenor from '../Common/CompaniesLogo/telenor.png';\r\n\r\nexport const sideBarLinks = [ // used\r\n    { linkName: 'Dashboard', linkto: '/dashboard', icon: \"fa-table\" },\r\n    { linkName: 'Employees', linkto: '/employees', icon: \"fa-user\" },\r\n    { linkName: 'Projects', linkto: '/projects', icon: \"fa-file-lines\" },\r\n    { linkName: 'Department', linkto: '/department', icon: \"fa-network-wired\" },\r\n];\r\n\r\nexport const ProjectData = [ // used\r\n    { title: \"BMW ( England )\", resourcesnum: \"45\", logo: bmw, projectcomplete: 15, progresscolor: \"purple\" },\r\n    { title: \"Huawaei\", resourcesnum: \"12\", logo: huawei, projectcomplete: 25, progresscolor: \"#ef5399\" },\r\n    { title: \"Haider Foods\", resourcesnum: \"4\", logo: coke, projectcomplete: 35, progresscolor: \"green\" },\r\n    { title: \"Telenor\", resourcesnum: \"32\", logo: telenor, projectcomplete: 45, progresscolor: \"#dbdb1e\" },\r\n    { title: \"Coke\", resourcesnum: \"12\", logo: coke, projectcomplete: 55, progresscolor: \"#7aacdb\" },\r\n    { title: \"Huawaei\", resourcesnum: \"12\", logo: huawei, projectcomplete: 65, progresscolor: \"#525659\" }\r\n];\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n\r\n  const [active, setActive] = useState(1);\r\n\r\n  const handlePageClick = (pageNumber) => {\r\n    setActive(pageNumber);\r\n    onPageChange(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex justify-content-end my-2'>\r\n      <nav>\r\n        <ul className=\"pagination\" id='pagination_Color_setting'>\r\n\r\n          {[\"Previous\", 1, 2, 3, 4, \" Next\"].map(pageNumber => (\r\n            <div style={{ transition: \"2s\" }} key={pageNumber} className={`page-item rounded-0 p-0 m-0 ${active === pageNumber ? 'active' : ''}`} onClick={() => handlePageClick(pageNumber)}>\r\n              <Link className=\"page-link rounded-0 \" to=\"\">{pageNumber}</Link>\r\n            </div>\r\n          ))\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination","import React, { useEffect } from \"react\";\r\n\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst EmployeLocation = () => {\r\n\r\n    useEffect(() => {\r\n        const map = L.map(\"map\").setView([10.99835602, 77.01502627], 11);\r\n\r\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n            attribution: '© OpenStreetMap contributors',\r\n        }).addTo(map);\r\n\r\n        L.marker([29.3858, 71.7557]).addTo(map)\r\n            .bindPopup(\"The islamia university of Bahwalpur\")\r\n            .openPopup();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card h-100\">\r\n            <h5 className=\"card-header\">Resource Location</h5>\r\n\r\n            <div className=\"card-body p-0\">\r\n                <div id=\"map\" className=\"img-fluid w-100\" style={{ height: \"400px\" }}></div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EmployeLocation;","import React, { useState } from 'react';\r\nimport CanvasJSReact from '@canvasjs/react-charts';\r\n\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nconst ResourcesTitle = () => {\r\n\r\n  // const [countemployee , setCountEmployees] = useState('');\r\n  // useEffect(() => {\r\n  //   const getEmployes = localStorage.getItem(`Employes`)\r\n  //   const parseEmployee = JSON.parse(getEmployes);\r\n  //   setCountEmployees(parseEmployee)\r\n  // }, [])\r\n\r\n  const [dataPoints] = useState([\r\n    // { name: countemployee.department  , y: 12 }\r\n    { name: \"Senior data Scientist\", y: 3 },\r\n    { name: \"Junior Data Scientist\", y: 4 },\r\n    { name: \"Senior Data Scientist\", y: 7, exploded: true },\r\n    { name: \"Data Engineer\", y: 7 },\r\n    { name: \"Associate Data Engine\", y: 2 },\r\n    { name: \"Principal Software Engineer\", y: 7 },\r\n  ]);\r\n\r\n  const [totalY] = useState(\r\n    dataPoints.reduce((sum, dataPoint) => sum + dataPoint.y, 0)\r\n  );\r\n\r\n  const options = {\r\n    animationEnabled: true,\r\n    subtitles: [\r\n      {\r\n        text: `Total: ${totalY}`,\r\n        verticalAlign: \"center\",\r\n        fontSize: 20,\r\n        dockInsidePlotArea: true,\r\n      },\r\n    ],\r\n    data: [\r\n      {\r\n        type: \"doughnut\",\r\n        showInLegend: true,\r\n        indexLabel: \"{name} {y}\",\r\n        dataPoints: dataPoints,\r\n      },\r\n    ],\r\n    toolTip: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className='card'>\r\n      <h5 className='card-header'>Resources Titles</h5>\r\n      <CanvasJSChart options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourcesTitle;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst LastMonthDetail = () => {\r\n\r\n  const [employelength, setEmployeLength] = useState([]);\r\n  const [projectlength, setProjectLength] = useState([]);\r\n  const [clientslength , setClientLength] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const employecount = localStorage.getItem('Employes');\r\n    const getlength = JSON.parse(employecount);\r\n    setEmployeLength(getlength);\r\n\r\n    const projectcount = localStorage.getItem('addnewproject');\r\n    const projectlength = JSON.parse(projectcount);\r\n    setProjectLength(projectlength);\r\n    setClientLength(projectlength)\r\n\r\n  }, [])\r\n\r\n  const cardsdata = [\r\n    { title: 'Total Employees', number: employelength.length, icon: 'fa-solid fa-people-group', iconbg: 'purple', textcolor: '#02eff7' },\r\n    { title: 'Total Projects', number: projectlength.length, icon: 'fa-solid fa-file-invoice', iconbg: '#02eff7', textcolor: 'red' },\r\n    { title: 'Total Clients', number: clientslength.length, icon: 'fa-solid fa-hand-holding-dollar', iconbg: '#CAE44F', textcolor: '#32CD32' },\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <div className='row g-1'>\r\n      {\r\n        cardsdata.map((data , Index) => (\r\n\r\n          <div key={Index}  className=\"col-md-4 mb-2\">\r\n            <div className=\"card \">\r\n              <div className=\"card-body rounded d-flex justify-content-between\">\r\n                <div className=\"\">\r\n                  <h5 className='card-title fw-bold '>{data.title ? data.title : 'not found'}</h5>\r\n                  <span className='fw-bold small'>{data.number ? data.number : 'not found'}</span>\r\n                  <p className='card-text fw-bold small mt-3' style={{ color: `${data.textcolor}` }}>{data.number ? data.number : 'not found'}<span className='small ms-1 text-dark'>since last month</span> </p>\r\n                </div>\r\n                <div className='card_icons'>\r\n                  <i className={`${data.icon} rounded-pill fs-3 d-flex justify-content-center align-items-center text-light`} style={{ background: `${data.iconbg}` }}></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LastMonthDetail;","import React from 'react';\r\n\r\nimport Ali from '../../../Common/EmployImage/Ali.jpeg';\r\nimport Abubaker from '../../../Common/EmployImage/abubaker.jpeg';\r\n\r\nconst DepartmentData = (props) => {\r\n\r\n    return (\r\n\r\n        <div className='row mt-4 '>\r\n\r\n            <div className='col-md-8 col-6'>\r\n                <h5 className='card-title m-0 small'>{props.data.department ? props.data.department : 'Data Not Found'}</h5>\r\n                <p className='card-text small mb-2 small'>\r\n                    <span>Total Resources : </span>\r\n                    12...</p>\r\n            </div>\r\n\r\n            <div className='col-md-4 col-6 d-flex justify-content-end' id='Departments_Img'>\r\n                <img src={Ali} className='img-fluid rounded-pill' alt={`Employee ${props.Index}`} />\r\n                <img src={Abubaker} className='img-fluid rounded-pill ' alt={`Employee ${props.Index}`} />\r\n                <img src={Ali} className='img-fluid rounded-pill' alt={`Employee ${props.Index}`} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepartmentData","import React, { useEffect, useState } from 'react';\r\n\r\nimport DepartmentData from './DepartmentData';\r\n\r\nconst DepartMents = () => {\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const getDepartments = localStorage.getItem(`department`);\r\n    const departmentparse = JSON.parse(getDepartments);\r\n    setDepartment(departmentparse);\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className='card h-100'>\r\n      <h5 className='card-header'>Departments</h5>\r\n\r\n      {department ?\r\n        <div className=\"card-body\">\r\n\r\n        {\r\n          department.map((data, Index) => (\r\n            <div key={Index}>\r\n              <DepartmentData data={data} Index={Index} />\r\n            </div>\r\n          ))\r\n        }\r\n\r\n      </div>\r\n      : \r\n      <div className='d-flex justify-content-center align-items-center h-100 '><h5 className='text-danger'>Nothing to show</h5></div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartMents;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Pagination from '../../Components/PaginationComponent/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DeveloperList = () => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [employedata, setEmployeData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const totalPages = 10; // Assume you have 10 pages\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const getEmployeData = (data) => {\r\n        navigate(`/employees/${data.id}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getEmploye = localStorage.getItem(`Employes`);\r\n        const employe = JSON.parse(getEmploye);\r\n        setEmployeData(employe);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <div className='table-responsive'>\r\n\r\n                    {employedata ? (\r\n                        <table className=\"table table-hover table-responsive-sm table-responsive Employ_table\">\r\n                            <thead className='bg-danger'>\r\n                                <tr>\r\n                                    <th scope=\"col\">No</th>\r\n                                    <th scope=\"col\">Employee Name</th>\r\n                                    <th scope='col'>Title</th>\r\n                                    <th scope=\"col\">Department</th>\r\n                                    <th scope=\"col\">Projects</th>\r\n                                    <th scope=\"col\">Assignment</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n\r\n                                {employedata.map((data, Index, id) => (\r\n\r\n                                    <tr id={data.id} key={Index}>\r\n\r\n                                        <td onClick={() => getEmployeData(data)} className='fw-bold text-center text-nowrap'>{Index + 1}</td>\r\n\r\n                                        <td onClick={() => getEmployeData(data)} >\r\n\r\n                                            <div className='d-flex text-nowrap' >\r\n                                                <img className='img-fluid rounded-pill me-2 ' id='employetable_img' src={data.employeimg} alt=\"not found\" />\r\n\r\n                                                <div className='d-flex flex-column justify-content-center'>\r\n                                                    <p className='small m-0 text-nowrap fw-bold'>\r\n                                                        {data.name ? data.name : 'not found'}\r\n                                                    </p>\r\n                                                    <p className='small m-0'>\r\n                                                        {data.email ? data.email : 'not found'}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </td>\r\n\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.jobtitle ? data.jobtitle : 'not found'}</td>\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.department ? data.department : 'not found'}</td>\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.project ? data.project : 'not found'}</td>\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.assignment ? data.assignment : 'not found'}</td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <div>\r\n                            <h1>Data Not Found</h1>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='my-2'>\r\n                <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeveloperList;","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProjectDataRender = ({ data, Index }) => {\r\n    const [progressEndValue, setProgressEndValue] = useState(data.projectcomplete);\r\n\r\n    useEffect(() => {\r\n        const circularProgress = document.querySelector(`.circular-progress-${Index}`);\r\n        const progressValue = document.querySelector(`.progress-value-${Index}`);\r\n\r\n        progressValue.textContent = `${progressEndValue}%`;\r\n        circularProgress.style.background = `conic-gradient( ${data.progresscolor} ${progressEndValue * 3.6}deg, #E9ECEF 0deg)`;\r\n        setProgressEndValue(progressEndValue);\r\n\r\n    }, [progressEndValue, Index, data.progresscolor]);\r\n\r\n    return (\r\n     \r\n            <div className='row'>\r\n\r\n                <div className=\"col-3 py-1\">\r\n                    <img className='img-fluid projects_Imgs' src={data.logo} alt=\"Logo Not Found\" />\r\n                </div>\r\n\r\n                <div className=\"col-7 p-0\">\r\n                    <div className='card-text fw-bold small'>{data.title}</div>\r\n                    <p className='small'><span>Resources in Projects :</span> {data.resourcesnum}</p>\r\n                </div>\r\n\r\n                <div className=\"col-1 py-1 small\">\r\n                    <div className=\"fw-bold small\">\r\n\r\n                        <div className={`circular-progress border-danger circular-progress-${Index}`}>\r\n                            <span className={`progress-value progress-value-${Index}`}>{data.projectcomplete}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProjectDataRender;\r\n","import React from 'react';\r\n\r\nimport { ProjectData } from '../../../Services/Services';\r\nimport ProjectDataRender from './ProjectDataRender';\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <div className='card h-100'>\r\n            <h5 className=\"card-header\">Projects</h5>\r\n\r\n            <div className=\"card-body me-1\">\r\n\r\n                {\r\n                    ProjectData.map((data, Index) => (\r\n                        <div className=\"mt-1\" key={Index}>\r\n                            <ProjectDataRender data={data} Index={Index} />\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import React from 'react';\r\n\r\nimport ResourcesTitle from '../../Components/resourcestitles/ResourcesTitle';\r\n\r\nconst ResourcesTitles = () => {\r\n  return (\r\n    <div>\r\n      <ResourcesTitle />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResourcesTitles;\r\n","import React from 'react';\r\n\r\nimport EmployeLocation from '../Components/employelocation/EmployeLocation';\r\nimport LastMonthDetail from './DashboardTopCards/LastMonthDetail';\r\nimport DepartMents from './DepartMents/DepartMents';\r\nimport DeveloperList from './DevelopersList/DeveloperList';\r\nimport Projects from './Projects/Projects';\r\nimport ResourcesTitle from './ResourcesTitles/ResourcesTitles';\r\n\r\nconst Dashboard = () => {\r\n\r\n  return (\r\n    <div className='mt-3'>\r\n\r\n      <h3 className='fw-bold my-4'>Dashboard</h3>\r\n\r\n      <div className='row g-2'>\r\n        <LastMonthDetail />\r\n      </div>\r\n\r\n      <div className=\"row g-2 mb-2\">\r\n\r\n        <div className=\"col-md-8\">\r\n          <EmployeLocation />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <Projects />\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"row g-2\">\r\n\r\n        <div className=\"col-md-8\">\r\n          <ResourcesTitle />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <DepartMents />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='mt-2'>\r\n        <DeveloperList />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;"],"names":["sideBarLinks","linkName","linkto","icon","ProjectData","title","resourcesnum","logo","bmw","projectcomplete","progresscolor","huawei","coke","_ref","currentPage","totalPages","onPageChange","active","setActive","useState","_jsx","className","children","id","map","pageNumber","style","transition","concat","onClick","handlePageClick","Link","to","EmployeLocation","useEffect","L","setView","attribution","addTo","bindPopup","openPopup","_jsxs","height","CanvasJSChart","CanvasJSReact","ResourcesTitle","dataPoints","name","y","exploded","totalY","reduce","sum","dataPoint","options","animationEnabled","subtitles","text","verticalAlign","fontSize","dockInsidePlotArea","data","type","showInLegend","indexLabel","toolTip","enabled","LastMonthDetail","employelength","setEmployeLength","projectlength","setProjectLength","clientslength","setClientLength","employecount","localStorage","getItem","getlength","JSON","parse","projectcount","cardsdata","number","length","iconbg","textcolor","Index","color","background","props","department","src","Ali","alt","Abubaker","DepartMents","setDepartment","getDepartments","departmentparse","DepartmentData","DeveloperList","setCurrentPage","employedata","setEmployeData","navigate","useNavigate","getEmployeData","getEmploye","employe","_Fragment","scope","employeimg","email","jobtitle","project","assignment","Pagination","newPage","progressEndValue","setProgressEndValue","circularProgress","document","querySelector","textContent","Projects","ProjectDataRender","ResourcesTitles","Dashboard"],"sourceRoot":""}