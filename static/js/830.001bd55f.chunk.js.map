{"version":3,"file":"static/js/830.001bd55f.chunk.js","mappings":"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","sources":["App.js"],"sourcesContent":["import React, { Suspense, createContext, useEffect, useState } from 'react';\n\nimport { Route, Routes, useLocation } from 'react-router-dom';\n\nimport urlImg from './link_img.jpeg';\n\nconst Error = React.lazy(() => import('./pages/ErrorPage/Error'));\nconst Login = React.lazy(() => import('./pages/loginsignup/login/Login'));\nconst Signup = React.lazy(() => import('./pages/loginsignup/signup/Signup'));\nconst Alert = React.lazy(() => import('./pages/Components/alert/Alert'));\nconst Protected = React.lazy(() => import('./pages/protectedroute/Protected'));\n\nconst Dashboard = React.lazy(() => import('./pages/Dashboard/Dashboard'));\n\nconst Department = React.lazy(() => import('./pages/Department/Department'));\nconst DepartmentEmployes = React.lazy(() => import('./pages/Department/departmentemloylist/DepartmentEmployeList'));\nconst DepartmentList = React.lazy(() => import('./pages/Department/departmentlist/DepartmentList'));\nconst AddDepartment = React.lazy(() => import('./pages/Department/adddepartment/AddDepartment'));\n\nconst AddSource = React.lazy(() => import('./pages/Employes/AddSource/AddSource'));\nconst AssignProject = React.lazy(() => import('./pages/Employes/AssignProject/AssignProject'));\nconst EmployeDetails = React.lazy(() => import('./pages/Employes/EmployeDetails/EmployeDetails'));\nconst Employes = React.lazy(() => import('./pages/Employes/Employes'));\nconst EmployeBase = React.lazy(() => import('./pages/Employes/EmployeBase'));\nconst EditSource = React.lazy(() => import('./pages/Employes/editsource/EditSource'));\n\nconst SideBar = React.lazy(() => import('./pages/Navigation/SideBar/SideBar'));\nconst Navbar = React.lazy(() => import('./pages/Navigation/TopBar/Navbar'));\n\nconst ProjectsIndex = React.lazy(() => import('./pages/Projects/ProjectIndex'));\nconst Projects = React.lazy(() => import('./pages/Projects/Projects'));\nconst AddProject = React.lazy(() => import('./pages/Projects/pages/addproject/AddProject'));\nconst EditResource = React.lazy(() => import('./pages/Projects/pages/editresource/EditResource'));\nconst ProjectList = React.lazy(() => import('./pages/Projects/pages/projectlist/ProjectList'));\n\n\nexport const setAlerts = createContext(null);\n\nfunction App() {\n\n    const [alert, setAlert] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        const path = location.pathname;\n        const pathname = path.slice(1);\n        document.title = pathname || 'Monkey_Ai';\n    }, [location]);\n\n    const getpathname = window.location.pathname;\n\n    const capitalize = (word) => {\n        const lower = word.slice(1); \n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    \n    document.title = 'Monkey_Ai';\n    document.querySelector('meta[property=\"og:url\"]').setAttribute('content', `${window.location.href}`);\n    document.querySelector('meta[name=\"description\"]').setAttribute('content', `Monkey_ai ${capitalize(getpathname)} for Projects and Employees details`);\n    document.querySelector('meta[property=\"og:image\"]').setAttribute('content', `${urlImg}`);\n    document.querySelector('meta[name=\"twitter:title\"]').setAttribute('content', `This is Monkey_Ai ${capitalize(getpathname)} page`);\n    document.querySelector('meta[name=\"twitter:image\"]').setAttribute('content', `${urlImg}`);\n    document.querySelector('meta[name=\"twitter:description\"]').setAttribute('content', `This is ${capitalize(getpathname)} page description for twitter`);\n    \n    <meta name=\"twitter:description\" content=\"Senior Selachimorpha at DigitalOcean\" />\n\n    const currentPath = window.location.pathname;\n    const isLoginPage = currentPath === '/login'  || currentPath === '/signup';\n    const loginPage = isLoginPage ? true : false;\n\n    const showAlert = (type, message) => {\n        setAlert({\n            msg: message,\n            type: type\n        })\n        setTimeout(() => {\n            setAlert(null);\n        }, 4000);\n    }\n\n    return (\n\n        <div className='container-fluid p-0'>\n\n            <setAlerts.Provider value={showAlert}>\n                <Suspense Suspense fallback={<div className='d-flex align-items-center justify-content-center h-100' style={{ height: \"100vh\" }}>\n                    <h1 className='text-danger fw-bold mt-5'>Loading....</h1>\n                </div>}>\n\n                    <div className='row g-0'>\n\n                        {!loginPage && <Navbar />}\n\n                        {!loginPage && <div className=\"col-md-2 mt-1\" style={{ background: \"white\" }}>\n                            <SideBar />\n                        </div>}\n\n                        <div className={`col-md-10 col-12 px-2`}>\n\n                            <Alert alert={alert} />\n\n                            <Routes>\n\n                                <Route index path='/login' element={<Login />} />\n                                <Route path='/signup' element={<Signup />} />\n\n\n                                <Route path='/monkeyai'  element={<Protected Component={Dashboard} />} />\n                                <Route path='/dashboard' index exact element={<Protected Component={Dashboard} />} />\n\n                                <Route path='/employees' element={<Protected Component={EmployeBase} />} >\n                                    <Route index element={<Protected Component={Employes} />} />\n                                    <Route path=\"new\" element={<Protected Component={AddSource} />} />\n                                    <Route path=\":employeeId\" element={<Protected Component={EmployeDetails} />} />\n                                    <Route path=\":employeeId/edit\" element={<Protected Component={EditSource} />} />\n                                    <Route path=\":employeeId/assignment\" element={<Protected Component={AssignProject} />} />\n                                </Route>\n\n                                <Route path='/projects' element={<Protected Component={Projects} />} >\n                                    <Route index element={<Protected Component={ProjectsIndex} />} />\n                                    <Route path='edit' element={<Protected Component={EditResource} />} />\n                                    <Route path=\"projectlist\" element={<Protected Component={ProjectList} />} />\n                                    <Route path=\"addproject\" element={<Protected Component={AddProject} />} />\n                                </Route>\n\n                                <Route path='/department' element={<Protected Component={Department} />} >\n                                    <Route index element={<Protected Component={DepartmentList} />} />\n                                    <Route path='adddepartment' element={<Protected Component={AddDepartment} />} />\n                                    <Route path='departmentemployees' element={<Protected Component={DepartmentEmployes} />} />\n                                </Route>\n\n                                <Route path='*' element={<Error />} />\n\n                            </Routes>\n\n                        </div >\n                    </div>\n\n                </Suspense>\n            </setAlerts.Provider >\n\n        </div>\n\n    );\n}\n\nexport default App;\n"],"names":["Error","React","Login","Signup","Alert","Protected","Dashboard","Department","DepartmentEmployes","DepartmentList","AddDepartment","AddSource","AssignProject","EmployeDetails","Employes","EmployeBase","EditSource","SideBar","Navbar","ProjectsIndex","Projects","AddProject","EditResource","ProjectList","setAlerts","createContext","alert","setAlert","useState","location","useLocation","useEffect","pathname","slice","document","title","getpathname","window","capitalize","word","lower","charAt","toUpperCase","querySelector","setAttribute","concat","href","urlImg","currentPath","loginPage","_jsx","className","children","Provider","value","showAlert","type","message","msg","setTimeout","Suspense","fallback","style","height","_jsxs","background","Routes","Route","index","path","element","Component","exact"],"sourceRoot":""}